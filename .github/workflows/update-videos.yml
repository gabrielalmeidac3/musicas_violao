name: Update Videos Daily
on:
  schedule:
    - cron: '53 13 * * *'
  workflow_dispatch:
permissions:
  contents: write
jobs:
  update-videos:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: |
          pip install yt-dlp pytz
      
      - name: Create private directory and cookies file
        run: |
          mkdir -p private
          echo "${{ secrets.COOKIES }}" > private/cookies.txt
          chmod 600 private/cookies.txt
          echo "Arquivo cookies.txt criado em private/"
          ls -la private/
          echo "Total de linhas no arquivo cookies.txt:"
          wc -l private/cookies.txt
      
      - name: Verify cookies format
        run: |
          echo "Verificando formato do arquivo de cookies..."
          if grep -q "youtube.com" private/cookies.txt; then
            echo "Arquivo de cookies parece conter domínios do YouTube."
          else
            echo "AVISO: Arquivo de cookies pode não estar no formato correto para o YouTube."
            echo "O arquivo de cookies deve estar no formato Netscape/Mozilla."
            echo "Exemplo das primeiras linhas (sem valores sensíveis):"
            echo "# Netscape HTTP Cookie File"
            echo "# http://curl.haxx.se/rfc/cookie_spec.html"
            echo "# This is a generated file! Do not edit."
            echo "Certifique-se que seu secret COOKIES está neste formato."
          fi
      
      - name: Mostrar conteúdo do cookies.txt para verificação (cuidado com dados sensíveis)
        run: |
          echo "Primeiras linhas do arquivo cookies.txt (para verificação):"
          head -n 3 private/cookies.txt
          echo "..."
          echo "Últimas linhas do arquivo cookies.txt (para verificação):"
          tail -n 3 private/cookies.txt
          echo "Total de linhas no arquivo:"
          wc -l private/cookies.txt
      
      - name: Executar script Python de exemplo
        run: |
          echo '
          import os
          
          print("Tentando acessar o arquivo cookies.txt...")
          
          if os.path.exists("private/cookies.txt"):
              print("Arquivo encontrado com sucesso!")
              
              with open("private/cookies.txt", "r") as f:
                  lines = f.readlines()
                  print(f"O arquivo tem {len(lines)} linhas")
                  
                  if len(lines) > 0:
                      print("Primeiras 3 caracteres da primeira linha: " + lines[0][:3] + "...")
                  
                  print("Acesso bem-sucedido ao arquivo cookies.txt!")
          else:
              print("ERRO: O arquivo cookies.txt não foi encontrado!")
          ' > test_cookies_access.py
          
          python test_cookies_access.py
      
      - name: Run script to update videos
        env:
          YT_DLP_VERBOSE: "True"
        run: python carregar_dados_videos_unificado.py
      
      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          [ -f videos.json ] && git add videos.json || echo "videos.json não encontrado"
          echo "videos.json adicionado: $(git status --porcelain videos.json)"
          [ -f videos_encaixe.json ] && git add videos_encaixe.json || echo "videos_encaixe.json não encontrado"
          echo "videos_encaixe.json adicionado: $(git status --porcelain videos_encaixe.json)"
          [ -f ritmos.json ] && git add ritmos.json || echo "ritmos.json não encontrado"
          echo "ritmos.json adicionado: $(git status --porcelain ritmos.json)"
          [ -f ritmos_encaixe.json ] && git add ritmos_encaixe.json || echo "ritmos_encaixe.json não encontrado"
          echo "ritmos_encaixe.json adicionado: $(git status --porcelain ritmos_encaixe.json)"
          [ -f execution_log.json ] && git add execution_log.json || echo "execution_log.json não encontrado"
          echo "execution_log.json adicionado: $(git status --porcelain execution_log.json)"
          git commit -m "Atualizar vídeos e ritmos - $(date +'%Y-%m-%d %H:%M:%S')" || true
          git push origin main
